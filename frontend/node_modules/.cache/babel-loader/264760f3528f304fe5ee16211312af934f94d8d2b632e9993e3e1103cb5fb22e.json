{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91848\\\\Desktop\\\\cloudsecdoc\\\\interviewPrep\\\\Simulations\\\\YCombinator-React-advanced\\\\Shiptivitas\\\\frontend\\\\src\\\\Card.js\";\nimport React from 'react';\nimport './Card.css';\nconst Card = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Card\",\n    \"data-id\": props.id,\n    style: props.style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, props.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.description));\n};\n_c = Card;\nexport default Card;\n\n/*import React from 'react';\r\nimport './Card.css';\r\n\r\nexport default class Card extends React.Component {\r\n  render() {\r\n    // Default card class\r\n    let className = ['Card'];\r\n\r\n    // Apply different colors based on the status of the card\r\n    if (this.props.status === 'backlog') {\r\n      className.push('Card-grey'); // For backlog status\r\n    } else if (this.props.status === 'in-progress') {\r\n      className.push('Card-blue'); // For in-progress status\r\n    } else if (this.props.status === 'complete') {\r\n      className.push('Card-green'); // For complete status\r\n    }\r\n\r\n    return (\r\n      <div className={className.join(' ')} data-id={this.props.id} data-status={this.props.status}>\r\n        <div className=\"Card-title\">{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n} */\n/*\r\nimport React from 'react';\r\nimport './Card.css';\r\n\r\nexport default class Card extends React.Component {\r\n  render() {\r\n    // Mapping statuses to corresponding classes\r\n    const statusClassMap = {\r\n      backlog: 'Card-grey',\r\n      'in-progress': 'Card-blue',\r\n      complete: 'Card-green',\r\n    };\r\n\r\n    // Get the appropriate class for the card based on status\r\n    const className = ['Card', statusClassMap[this.props.status] || '']; // Default to empty string if no status matches\r\n\r\n    return (\r\n      <div className={className.join(' ')} data-id={this.props.id} data-status={this.props.status}>\r\n        <div className=\"Card-title\">{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","Card","props","createElement","className","id","style","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","description","_c","$RefreshReg$"],"sources":["C:/Users/91848/Desktop/cloudsecdoc/interviewPrep/Simulations/YCombinator-React-advanced/Shiptivitas/frontend/src/Card.js"],"sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"Card\" data-id={props.id} style={props.style}>\r\n      <h5>{props.name}</h5>\r\n      <p>{props.description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n\r\n/*import React from 'react';\r\nimport './Card.css';\r\n\r\nexport default class Card extends React.Component {\r\n  render() {\r\n    // Default card class\r\n    let className = ['Card'];\r\n\r\n    // Apply different colors based on the status of the card\r\n    if (this.props.status === 'backlog') {\r\n      className.push('Card-grey'); // For backlog status\r\n    } else if (this.props.status === 'in-progress') {\r\n      className.push('Card-blue'); // For in-progress status\r\n    } else if (this.props.status === 'complete') {\r\n      className.push('Card-green'); // For complete status\r\n    }\r\n\r\n    return (\r\n      <div className={className.join(' ')} data-id={this.props.id} data-status={this.props.status}>\r\n        <div className=\"Card-title\">{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n} */\r\n/*\r\nimport React from 'react';\r\nimport './Card.css';\r\n\r\nexport default class Card extends React.Component {\r\n  render() {\r\n    // Mapping statuses to corresponding classes\r\n    const statusClassMap = {\r\n      backlog: 'Card-grey',\r\n      'in-progress': 'Card-blue',\r\n      complete: 'Card-green',\r\n    };\r\n\r\n    // Get the appropriate class for the card based on status\r\n    const className = ['Card', statusClassMap[this.props.status] || '']; // Default to empty string if no status matches\r\n\r\n    return (\r\n      <div className={className.join(' ')} data-id={this.props.id} data-status={this.props.status}>\r\n        <div className=\"Card-title\">{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n*/"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAEnB,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB,oBACEF,KAAA,CAAAG,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAC,WAASF,KAAK,CAACG,EAAG;IAACC,KAAK,EAAEJ,KAAK,CAACI,KAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1DZ,KAAA,CAAAG,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKV,KAAK,CAACW,IAAS,CAAC,eACrBb,KAAA,CAAAG,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIV,KAAK,CAACY,WAAe,CACtB,CAAC;AAEV,CAAC;AAACC,EAAA,GAPId,IAAI;AASV,eAAeA,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}