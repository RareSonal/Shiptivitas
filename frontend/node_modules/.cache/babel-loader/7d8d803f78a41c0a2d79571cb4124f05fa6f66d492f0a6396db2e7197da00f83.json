{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91848\\\\Desktop\\\\cloudsecdoc\\\\interviewPrep\\\\Simulations\\\\YCombinator\\\\Shiptivity\\\\src\\\\Board.js\";\nimport React from 'react';\nimport Swimlane from './Swimlane';\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Initialize clients state with a default structure\n    this.state = {\n      clients: {\n        backlog: [],\n        inProgress: [],\n        complete: []\n      }\n    };\n\n    // Initialize swimlane refs\n    this.swimlanes = {\n      backlog: /*#__PURE__*/React.createRef(),\n      inProgress: /*#__PURE__*/React.createRef(),\n      complete: /*#__PURE__*/React.createRef()\n    };\n  }\n  componentDidMount() {\n    // Simulate fetching data or initialize clients from a local source\n    this.setState({\n      clients: {\n        backlog: [\n        // Sample data for backlog\n        {\n          id: '1',\n          name: 'Company A',\n          status: 'backlog'\n        }, {\n          id: '2',\n          name: 'Company B',\n          status: 'backlog'\n        }],\n        inProgress: [\n        // Sample data for in-progress\n        {\n          id: '3',\n          name: 'Company C',\n          status: 'in-progress'\n        }],\n        complete: [\n        // Sample data for complete\n        {\n          id: '4',\n          name: 'Company D',\n          status: 'complete'\n        }]\n      }\n    });\n  }\n  renderSwimlane(name, clients, ref) {\n    return /*#__PURE__*/React.createElement(Swimlane, {\n      name: name,\n      clients: clients,\n      dragulaRef: ref // Pass the ref to Swimlane\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    });\n  }\n  render() {\n    const {\n      clients\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, this.renderSwimlane('Backlog', clients.backlog, this.swimlanes.backlog)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, this.renderSwimlane('In Progress', clients.inProgress, this.swimlanes.inProgress)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, this.renderSwimlane('Complete', clients.complete, this.swimlanes.complete)))));\n  }\n}","map":{"version":3,"names":["React","Swimlane","Board","Component","constructor","props","state","clients","backlog","inProgress","complete","swimlanes","createRef","componentDidMount","setState","id","name","status","renderSwimlane","ref","createElement","dragulaRef","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","render","className"],"sources":["C:/Users/91848/Desktop/cloudsecdoc/interviewPrep/Simulations/YCombinator/Shiptivity/src/Board.js"],"sourcesContent":["import React from 'react';\r\nimport Swimlane from './Swimlane';\r\n\r\nexport default class Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Initialize clients state with a default structure\r\n    this.state = {\r\n      clients: {\r\n        backlog: [],\r\n        inProgress: [],\r\n        complete: [],\r\n      },\r\n    };\r\n\r\n    // Initialize swimlane refs\r\n    this.swimlanes = {\r\n      backlog: React.createRef(),\r\n      inProgress: React.createRef(),\r\n      complete: React.createRef(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Simulate fetching data or initialize clients from a local source\r\n    this.setState({\r\n      clients: {\r\n        backlog: [\r\n          // Sample data for backlog\r\n          { id: '1', name: 'Company A', status: 'backlog' },\r\n          { id: '2', name: 'Company B', status: 'backlog' },\r\n        ],\r\n        inProgress: [\r\n          // Sample data for in-progress\r\n          { id: '3', name: 'Company C', status: 'in-progress' },\r\n        ],\r\n        complete: [\r\n          // Sample data for complete\r\n          { id: '4', name: 'Company D', status: 'complete' },\r\n        ],\r\n      },\r\n    });\r\n  }\r\n\r\n  renderSwimlane(name, clients, ref) {\r\n    return (\r\n      <Swimlane\r\n        name={name}\r\n        clients={clients}\r\n        dragulaRef={ref} // Pass the ref to Swimlane\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { clients } = this.state;\r\n\r\n    return (\r\n      <div className=\"Board\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('Backlog', clients.backlog, this.swimlanes.backlog)}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('In Progress', clients.inProgress, this.swimlanes.inProgress)}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('Complete', clients.complete, this.swimlanes.complete)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}