{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91848\\\\Desktop\\\\cloudsecdoc\\\\interviewPrep\\\\Simulations\\\\YCombinator\\\\Shiptivity\\\\src\\\\Card.js\";\n/*import React from 'react';\r\nimport './Card.css';\r\n\r\nexport default class Card extends React.Component {\r\n  render() {\r\n    // Default card class\r\n    let className = ['Card'];\r\n\r\n    // Apply different colors based on the status of the card\r\n    if (this.props.status === 'backlog') {\r\n      className.push('Card-grey'); // For backlog status\r\n    } else if (this.props.status === 'in-progress') {\r\n      className.push('Card-blue'); // For in-progress status\r\n    } else if (this.props.status === 'complete') {\r\n      className.push('Card-green'); // For complete status\r\n    }\r\n\r\n    return (\r\n      <div className={className.join(' ')} data-id={this.props.id} data-status={this.props.status}>\r\n        <div className=\"Card-title\">{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n*/\nimport React from 'react';\nimport './Card.css';\nexport default class Card extends React.Component {\n  render() {\n    // Mapping statuses to corresponding classes\n    const statusClassMap = {\n      backlog: 'Card-grey',\n      'in-progress': 'Card-blue',\n      complete: 'Card-green'\n    };\n\n    // Get the appropriate class for the card based on status\n    const className = ['Card', statusClassMap[this.props.status] || '']; // Default to empty string if no status matches\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className.join(' '),\n      \"data-id\": this.props.id,\n      \"data-status\": this.props.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, this.props.name));\n  }\n}","map":{"version":3,"names":["React","Card","Component","render","statusClassMap","backlog","complete","className","props","status","createElement","join","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name"],"sources":["C:/Users/91848/Desktop/cloudsecdoc/interviewPrep/Simulations/YCombinator/Shiptivity/src/Card.js"],"sourcesContent":["/*import React from 'react';\r\nimport './Card.css';\r\n\r\nexport default class Card extends React.Component {\r\n  render() {\r\n    // Default card class\r\n    let className = ['Card'];\r\n\r\n    // Apply different colors based on the status of the card\r\n    if (this.props.status === 'backlog') {\r\n      className.push('Card-grey'); // For backlog status\r\n    } else if (this.props.status === 'in-progress') {\r\n      className.push('Card-blue'); // For in-progress status\r\n    } else if (this.props.status === 'complete') {\r\n      className.push('Card-green'); // For complete status\r\n    }\r\n\r\n    return (\r\n      <div className={className.join(' ')} data-id={this.props.id} data-status={this.props.status}>\r\n        <div className=\"Card-title\">{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n*/\r\nimport React from 'react';\r\nimport './Card.css';\r\n\r\nexport default class Card extends React.Component {\r\n  render() {\r\n    // Mapping statuses to corresponding classes\r\n    const statusClassMap = {\r\n      backlog: 'Card-grey',\r\n      'in-progress': 'Card-blue',\r\n      complete: 'Card-green',\r\n    };\r\n\r\n    // Get the appropriate class for the card based on status\r\n    const className = ['Card', statusClassMap[this.props.status] || '']; // Default to empty string if no status matches\r\n\r\n    return (\r\n      <div className={className.join(' ')} data-id={this.props.id} data-status={this.props.status}>\r\n        <div className=\"Card-title\">{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAEnB,eAAe,MAAMC,IAAI,SAASD,KAAK,CAACE,SAAS,CAAC;EAChDC,MAAMA,CAAA,EAAG;IACP;IACA,MAAMC,cAAc,GAAG;MACrBC,OAAO,EAAE,WAAW;MACpB,aAAa,EAAE,WAAW;MAC1BC,QAAQ,EAAE;IACZ,CAAC;;IAED;IACA,MAAMC,SAAS,GAAG,CAAC,MAAM,EAAEH,cAAc,CAAC,IAAI,CAACI,KAAK,CAACC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;;IAErE,oBACET,KAAA,CAAAU,aAAA;MAAKH,SAAS,EAAEA,SAAS,CAACI,IAAI,CAAC,GAAG,CAAE;MAAC,WAAS,IAAI,CAACH,KAAK,CAACI,EAAG;MAAC,eAAa,IAAI,CAACJ,KAAK,CAACC,MAAO;MAAAI,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC1FlB,KAAA,CAAAU,aAAA;MAAKH,SAAS,EAAC,YAAY;MAAAM,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAE,IAAI,CAACV,KAAK,CAACW,IAAU,CAC/C,CAAC;EAEV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}