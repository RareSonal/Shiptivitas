{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91848\\\\Desktop\\\\cloudsecdoc\\\\interviewPrep\\\\Simulations\\\\YCombinator\\\\Shiptivity\\\\src\\\\Board.js\";\nimport React from 'react';\nimport Dragula from 'dragula';\nimport 'dragula/dist/dragula.css';\nimport Swimlane from './Swimlane';\nimport './Board.css';\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props);\n    const clients = this.getClients();\n    this.state = {\n      clients: {\n        backlog: clients.filter(client => !client.status || client.status === 'backlog'),\n        inProgress: clients.filter(client => client.status && client.status === 'in-progress'),\n        complete: clients.filter(client => client.status && client.status === 'complete')\n      }\n    };\n    this.swimlanes = {\n      backlog: /*#__PURE__*/React.createRef(),\n      inProgress: /*#__PURE__*/React.createRef(),\n      complete: /*#__PURE__*/React.createRef()\n    };\n  }\n\n  // Function to get clients (same as provided)\n  getClients() {\n    return [['1', 'Stark, White and Abbott', 'Cloned Optimal Architecture', 'in-progress'], ['2', 'Wiza LLC', 'Exclusive Bandwidth-Monitored Implementation', 'complete'], ['3', 'Nolan LLC', 'Vision-Oriented 4Thgeneration Graphicaluserinterface', 'backlog'], ['4', 'Thompson PLC', 'Streamlined Regional Knowledgeuser', 'in-progress'], ['5', 'Walker-Williamson', 'Team-Oriented 6Thgeneration Matrix', 'in-progress'], ['6', 'Boehm and Sons', 'Automated Systematic Paradigm', 'backlog'], ['7', 'Runolfsson, Hegmann and Block', 'Integrated Transitional Strategy', 'backlog'], ['8', 'Schumm-Labadie', 'Operative Heuristic Challenge', 'backlog'], ['9', 'Kohler Group', 'Re-Contextualized Multi-Tasking Attitude', 'backlog'], ['10', 'Romaguera Inc', 'Managed Foreground Toolset', 'backlog'], ['11', 'Reilly-King', 'Future-Proofed Interactive Toolset', 'complete'], ['12', 'Emard, Champlin and Runolfsdottir', 'Devolved Needs-Based Capability', 'backlog'], ['13', 'Fritsch, Cronin and Wolff', 'Open-Source 3Rdgeneration Website', 'complete'], ['14', 'Borer LLC', 'Profit-Focused Incremental Orchestration', 'backlog'], ['15', 'Emmerich-Ankunding', 'User-Centric Stable Extranet', 'in-progress'], ['16', 'Willms-Abbott', 'Progressive Bandwidth-Monitored Access', 'in-progress'], ['17', 'Brekke PLC', 'Intuitive User-Facing Customerloyalty', 'complete'], ['18', 'Bins, Toy and Klocko', 'Integrated Assymetric Software', 'backlog'], ['19', 'Hodkiewicz-Hayes', 'Programmable Systematic Securedline', 'backlog'], ['20', 'Murphy, Lang and Ferry', 'Organized Explicit Access', 'backlog']].map(companyDetails => ({\n      id: companyDetails[0],\n      name: companyDetails[1],\n      description: companyDetails[2],\n      status: companyDetails[3]\n    }));\n  }\n\n  // Handle drag start and drop actions\n  handleDragStart() {\n    // Optionally handle logic before drag starts, like highlighting the card\n  }\n  handleDrop(event, swimlane) {\n    const {\n      clients\n    } = this.state;\n    const clientId = event.target.getAttribute('data-id');\n    const clientIndex = clients[swimlane].findIndex(client => client.id === clientId);\n\n    // Update the client status based on the new swimlane\n    let updatedClients = [...clients[swimlane]];\n    updatedClients[clientIndex].status = swimlane;\n    this.setState(prevState => ({\n      clients: {\n        ...prevState.clients,\n        [swimlane]: updatedClients\n      }\n    }));\n  }\n\n  // Function to render a swimlane (column)\n  renderSwimlane(name, clients, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref,\n      className: \"Swimlane-column\",\n      id: name,\n      onDrop: e => this.handleDrop(e, name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Swimlane, {\n      name: name,\n      clients: clients,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  // Set up Dragula after the component mounts\n  componentDidMount() {\n    const dragulaInstance = Dragula([this.swimlanes.backlog.current, this.swimlanes.inProgress.current, this.swimlanes.complete.current]);\n    dragulaInstance.on('drop', (el, target, source) => {\n      const swimlane = target.id; // Get the swimlane's ID (backlog, in-progress, complete)\n      this.handleDrop(el, swimlane);\n    });\n\n    // Optional: Adding custom color change behavior when the card is dropped in a new swimlane\n    dragulaInstance.on('drag', el => {\n      el.style.transition = 'all 0.2s ease';\n    });\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, this.renderSwimlane('backlog', this.state.clients.backlog, this.swimlanes.backlog)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, this.renderSwimlane('inProgress', this.state.clients.inProgress, this.swimlanes.inProgress)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, this.renderSwimlane('complete', this.state.clients.complete, this.swimlanes.complete)))));\n  }\n}","map":{"version":3,"names":["React","Dragula","Swimlane","Board","Component","constructor","props","clients","getClients","state","backlog","filter","client","status","inProgress","complete","swimlanes","createRef","map","companyDetails","id","name","description","handleDragStart","handleDrop","event","swimlane","clientId","target","getAttribute","clientIndex","findIndex","updatedClients","setState","prevState","renderSwimlane","ref","createElement","className","onDrop","e","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","componentDidMount","dragulaInstance","current","on","el","source","style","transition","render"],"sources":["C:/Users/91848/Desktop/cloudsecdoc/interviewPrep/Simulations/YCombinator/Shiptivity/src/Board.js"],"sourcesContent":["import React from 'react';\r\nimport Dragula from 'dragula';\r\nimport 'dragula/dist/dragula.css';\r\nimport Swimlane from './Swimlane';\r\nimport './Board.css';\r\n\r\nexport default class Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const clients = this.getClients();\r\n    this.state = {\r\n      clients: {\r\n        backlog: clients.filter(client => !client.status || client.status === 'backlog'),\r\n        inProgress: clients.filter(client => client.status && client.status === 'in-progress'),\r\n        complete: clients.filter(client => client.status && client.status === 'complete'),\r\n      }\r\n    };\r\n    this.swimlanes = {\r\n      backlog: React.createRef(),\r\n      inProgress: React.createRef(),\r\n      complete: React.createRef(),\r\n    };\r\n  }\r\n\r\n  // Function to get clients (same as provided)\r\n  getClients() {\r\n    return [\r\n      ['1','Stark, White and Abbott','Cloned Optimal Architecture', 'in-progress'],\r\n      ['2','Wiza LLC','Exclusive Bandwidth-Monitored Implementation', 'complete'],\r\n      ['3','Nolan LLC','Vision-Oriented 4Thgeneration Graphicaluserinterface', 'backlog'],\r\n      ['4','Thompson PLC','Streamlined Regional Knowledgeuser', 'in-progress'],\r\n      ['5','Walker-Williamson','Team-Oriented 6Thgeneration Matrix', 'in-progress'],\r\n      ['6','Boehm and Sons','Automated Systematic Paradigm', 'backlog'],\r\n      ['7','Runolfsson, Hegmann and Block','Integrated Transitional Strategy', 'backlog'],\r\n      ['8','Schumm-Labadie','Operative Heuristic Challenge', 'backlog'],\r\n      ['9','Kohler Group','Re-Contextualized Multi-Tasking Attitude', 'backlog'],\r\n      ['10','Romaguera Inc','Managed Foreground Toolset', 'backlog'],\r\n      ['11','Reilly-King','Future-Proofed Interactive Toolset', 'complete'],\r\n      ['12','Emard, Champlin and Runolfsdottir','Devolved Needs-Based Capability', 'backlog'],\r\n      ['13','Fritsch, Cronin and Wolff','Open-Source 3Rdgeneration Website', 'complete'],\r\n      ['14','Borer LLC','Profit-Focused Incremental Orchestration', 'backlog'],\r\n      ['15','Emmerich-Ankunding','User-Centric Stable Extranet', 'in-progress'],\r\n      ['16','Willms-Abbott','Progressive Bandwidth-Monitored Access', 'in-progress'],\r\n      ['17','Brekke PLC','Intuitive User-Facing Customerloyalty', 'complete'],\r\n      ['18','Bins, Toy and Klocko','Integrated Assymetric Software', 'backlog'],\r\n      ['19','Hodkiewicz-Hayes','Programmable Systematic Securedline', 'backlog'],\r\n      ['20','Murphy, Lang and Ferry','Organized Explicit Access', 'backlog'],\r\n    ].map(companyDetails => ({\r\n      id: companyDetails[0],\r\n      name: companyDetails[1],\r\n      description: companyDetails[2],\r\n      status: companyDetails[3],\r\n    }));\r\n  }\r\n\r\n  // Handle drag start and drop actions\r\n  handleDragStart() {\r\n    // Optionally handle logic before drag starts, like highlighting the card\r\n  }\r\n\r\n  handleDrop(event, swimlane) {\r\n    const { clients } = this.state;\r\n    const clientId = event.target.getAttribute('data-id');\r\n    const clientIndex = clients[swimlane].findIndex(client => client.id === clientId);\r\n\r\n    // Update the client status based on the new swimlane\r\n    let updatedClients = [...clients[swimlane]];\r\n    updatedClients[clientIndex].status = swimlane;\r\n\r\n    this.setState(prevState => ({\r\n      clients: {\r\n        ...prevState.clients,\r\n        [swimlane]: updatedClients\r\n      }\r\n    }));\r\n  }\r\n\r\n  // Function to render a swimlane (column)\r\n  renderSwimlane(name, clients, ref) {\r\n    return (\r\n      <div ref={ref} className=\"Swimlane-column\" id={name} onDrop={(e) => this.handleDrop(e, name)}>\r\n        <Swimlane name={name} clients={clients} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Set up Dragula after the component mounts\r\n  componentDidMount() {\r\n    const dragulaInstance = Dragula([this.swimlanes.backlog.current, this.swimlanes.inProgress.current, this.swimlanes.complete.current]);\r\n\r\n    dragulaInstance.on('drop', (el, target, source) => {\r\n      const swimlane = target.id; // Get the swimlane's ID (backlog, in-progress, complete)\r\n      this.handleDrop(el, swimlane);\r\n    });\r\n\r\n    // Optional: Adding custom color change behavior when the card is dropped in a new swimlane\r\n    dragulaInstance.on('drag', (el) => {\r\n      el.style.transition = 'all 0.2s ease';\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Board\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('backlog', this.state.clients.backlog, this.swimlanes.backlog)}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('inProgress', this.state.clients.inProgress, this.swimlanes.inProgress)}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('complete', this.state.clients.complete, this.swimlanes.complete)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}