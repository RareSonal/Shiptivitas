{"ast":null,"code":"import React from'react';import Dragula from'dragula';import'dragula/dist/dragula.css';import Swimlane from'./Swimlane';import'./Board.css';export default class Board extends React.Component{constructor(props){super(props);const clients=this.getClients();this.state={clients:{backlog:clients.filter(client=>!client.status||client.status==='backlog'),inProgress:clients.filter(client=>client.status==='in-progress'),complete:clients.filter(client=>client.status==='complete')}};this.swimlanes={backlog:/*#__PURE__*/React.createRef(),inProgress:/*#__PURE__*/React.createRef(),complete:/*#__PURE__*/React.createRef()};}// Function to get the initial set of clients\ngetClients(){return[['1','Stark, White and Abbott','Cloned Optimal Architecture','in-progress'],['2','Wiza LLC','Exclusive Bandwidth-Monitored Implementation','complete'],['3','Nolan LLC','Vision-Oriented 4Thgeneration Graphicaluserinterface','backlog'],['4','Thompson PLC','Streamlined Regional Knowledgeuser','in-progress'],['5','Walker-Williamson','Team-Oriented 6Thgeneration Matrix','in-progress'],['6','Boehm and Sons','Automated Systematic Paradigm','backlog'],['7','Runolfsson, Hegmann and Block','Integrated Transitional Strategy','backlog'],['8','Schumm-Labadie','Operative Heuristic Challenge','backlog'],['9','Kohler Group','Re-Contextualized Multi-Tasking Attitude','backlog'],['10','Romaguera Inc','Managed Foreground Toolset','backlog'],['11','Reilly-King','Future-Proofed Interactive Toolset','complete'],['12','Emard, Champlin and Runolfsdottir','Devolved Needs-Based Capability','backlog'],['13','Fritsch, Cronin and Wolff','Open-Source 3Rdgeneration Website','complete'],['14','Borer LLC','Profit-Focused Incremental Orchestration','backlog'],['15','Emmerich-Ankunding','User-Centric Stable Extranet','in-progress'],['16','Willms-Abbott','Progressive Bandwidth-Monitored Access','in-progress'],['17','Brekke PLC','Intuitive User-Facing Customerloyalty','complete'],['18','Bins, Toy and Klocko','Integrated Assymetric Software','backlog'],['19','Hodkiewicz-Hayes','Programmable Systematic Securedline','backlog'],['20','Murphy, Lang and Ferry','Organized Explicit Access','backlog']].map(companyDetails=>({id:companyDetails[0],name:companyDetails[1],description:companyDetails[2],status:companyDetails[3]}));}// Function to handle the status update when a card is moved to another swimlane\nupdateCardStatus(cardId,newStatus){const updatedClients={...this.state.clients};// Find the card and update its status\nObject.keys(updatedClients).forEach(swimlane=>{const clientsInSwimlane=updatedClients[swimlane];clientsInSwimlane.forEach(client=>{if(client.id===cardId){client.status=newStatus;}});});this.setState({clients:updatedClients});}// Initialize the drag-and-drop functionality using Dragula\ninitializeDragula(){Object.keys(this.swimlanes).forEach(swimlane=>{const container=this.swimlanes[swimlane].current;if(container){const drake=Dragula([container]);// When an item is dropped into a new swimlane, update its status\ndrake.on('drop',(el,target,source)=>{const cardId=el.dataset.id;const newSwimlane=target.dataset.swimlane;// Assume each swimlane has a `data-swimlane` attribute\nthis.updateCardStatus(cardId,newSwimlane);});}});}componentDidMount(){this.initializeDragula();}// Function to render each swimlane\nrenderSwimlane(name,clients,ref){return/*#__PURE__*/React.createElement(Swimlane,{name:name,clients:clients,dragulaRef:ref});}render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"Board\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"},this.renderSwimlane('Backlog',this.state.clients.backlog,this.swimlanes.backlog)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"},this.renderSwimlane('In Progress',this.state.clients.inProgress,this.swimlanes.inProgress)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"},this.renderSwimlane('Complete',this.state.clients.complete,this.swimlanes.complete)))));}}","map":{"version":3,"names":["React","Dragula","Swimlane","Board","Component","constructor","props","clients","getClients","state","backlog","filter","client","status","inProgress","complete","swimlanes","createRef","map","companyDetails","id","name","description","updateCardStatus","cardId","newStatus","updatedClients","Object","keys","forEach","swimlane","clientsInSwimlane","setState","initializeDragula","container","current","drake","on","el","target","source","dataset","newSwimlane","componentDidMount","renderSwimlane","ref","createElement","dragulaRef","render","className"],"sources":["C:/Users/91848/Desktop/cloudsecdoc/interviewPrep/Simulations/YCombinator/Shiptivity/src/Board.js"],"sourcesContent":["import React from 'react';\r\nimport Dragula from 'dragula';\r\nimport 'dragula/dist/dragula.css';\r\nimport Swimlane from './Swimlane';\r\nimport './Board.css';\r\n\r\nexport default class Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const clients = this.getClients();\r\n    this.state = {\r\n      clients: {\r\n        backlog: clients.filter(client => !client.status || client.status === 'backlog'),\r\n        inProgress: clients.filter(client => client.status === 'in-progress'),\r\n        complete: clients.filter(client => client.status === 'complete'),\r\n      },\r\n    };\r\n    \r\n    this.swimlanes = {\r\n      backlog: React.createRef(),\r\n      inProgress: React.createRef(),\r\n      complete: React.createRef(),\r\n    };\r\n  }\r\n\r\n  // Function to get the initial set of clients\r\n  getClients() {\r\n    return [\r\n      ['1', 'Stark, White and Abbott', 'Cloned Optimal Architecture', 'in-progress'],\r\n      ['2', 'Wiza LLC', 'Exclusive Bandwidth-Monitored Implementation', 'complete'],\r\n      ['3', 'Nolan LLC', 'Vision-Oriented 4Thgeneration Graphicaluserinterface', 'backlog'],\r\n      ['4', 'Thompson PLC', 'Streamlined Regional Knowledgeuser', 'in-progress'],\r\n      ['5', 'Walker-Williamson', 'Team-Oriented 6Thgeneration Matrix', 'in-progress'],\r\n      ['6', 'Boehm and Sons', 'Automated Systematic Paradigm', 'backlog'],\r\n      ['7', 'Runolfsson, Hegmann and Block', 'Integrated Transitional Strategy', 'backlog'],\r\n      ['8', 'Schumm-Labadie', 'Operative Heuristic Challenge', 'backlog'],\r\n      ['9', 'Kohler Group', 'Re-Contextualized Multi-Tasking Attitude', 'backlog'],\r\n      ['10', 'Romaguera Inc', 'Managed Foreground Toolset', 'backlog'],\r\n      ['11', 'Reilly-King', 'Future-Proofed Interactive Toolset', 'complete'],\r\n      ['12', 'Emard, Champlin and Runolfsdottir', 'Devolved Needs-Based Capability', 'backlog'],\r\n      ['13', 'Fritsch, Cronin and Wolff', 'Open-Source 3Rdgeneration Website', 'complete'],\r\n      ['14', 'Borer LLC', 'Profit-Focused Incremental Orchestration', 'backlog'],\r\n      ['15', 'Emmerich-Ankunding', 'User-Centric Stable Extranet', 'in-progress'],\r\n      ['16', 'Willms-Abbott', 'Progressive Bandwidth-Monitored Access', 'in-progress'],\r\n      ['17', 'Brekke PLC', 'Intuitive User-Facing Customerloyalty', 'complete'],\r\n      ['18', 'Bins, Toy and Klocko', 'Integrated Assymetric Software', 'backlog'],\r\n      ['19', 'Hodkiewicz-Hayes', 'Programmable Systematic Securedline', 'backlog'],\r\n      ['20', 'Murphy, Lang and Ferry', 'Organized Explicit Access', 'backlog'],\r\n    ].map(companyDetails => ({\r\n      id: companyDetails[0],\r\n      name: companyDetails[1],\r\n      description: companyDetails[2],\r\n      status: companyDetails[3],\r\n    }));\r\n  }\r\n\r\n  // Function to handle the status update when a card is moved to another swimlane\r\n  updateCardStatus(cardId, newStatus) {\r\n    const updatedClients = { ...this.state.clients };\r\n    \r\n    // Find the card and update its status\r\n    Object.keys(updatedClients).forEach(swimlane => {\r\n      const clientsInSwimlane = updatedClients[swimlane];\r\n      clientsInSwimlane.forEach(client => {\r\n        if (client.id === cardId) {\r\n          client.status = newStatus;\r\n        }\r\n      });\r\n    });\r\n\r\n    this.setState({ clients: updatedClients });\r\n  }\r\n\r\n  // Initialize the drag-and-drop functionality using Dragula\r\n  initializeDragula() {\r\n    Object.keys(this.swimlanes).forEach(swimlane => {\r\n      const container = this.swimlanes[swimlane].current;\r\n\r\n      if (container) {\r\n        const drake = Dragula([container]);\r\n\r\n        // When an item is dropped into a new swimlane, update its status\r\n        drake.on('drop', (el, target, source) => {\r\n          const cardId = el.dataset.id;\r\n          const newSwimlane = target.dataset.swimlane;  // Assume each swimlane has a `data-swimlane` attribute\r\n          \r\n          this.updateCardStatus(cardId, newSwimlane);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.initializeDragula();\r\n  }\r\n\r\n  // Function to render each swimlane\r\n  renderSwimlane(name, clients, ref) {\r\n    return (\r\n      <Swimlane \r\n        name={name} \r\n        clients={clients} \r\n        dragulaRef={ref} \r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Board\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('Backlog', this.state.clients.backlog, this.swimlanes.backlog)}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('In Progress', this.state.clients.inProgress, this.swimlanes.inProgress)}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('Complete', this.state.clients.complete, this.swimlanes.complete)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}