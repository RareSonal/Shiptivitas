{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91848\\\\Desktop\\\\cloudsecdoc\\\\interviewPrep\\\\Simulations\\\\YCombinator\\\\Shiptivity\\\\src\\\\Swimlane.js\";\nimport React from 'react';\nimport Card from './Card';\nimport './Swimlane.css';\nimport Dragula from 'dragula';\nexport default class Swimlane extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clients: this.props.clients\n    };\n  }\n  componentDidMount() {\n    // Initialize drag-and-drop functionality using Dragula\n    const container = this.props.dragulaRef.current;\n\n    // Configure dragula to handle card dragging\n    const drake = Dragula([container]);\n\n    // Handle when a card is dropped in another swimlane\n    drake.on('drop', (el, target, source, sibling) => {\n      const cardId = el.dataset.id;\n      const newSwimlane = target.dataset.swimlane; // Assuming each swimlane has a dataset with its name\n      this.updateCardStatus(cardId, newSwimlane);\n    });\n  }\n  updateCardStatus(cardId, newStatus) {\n    // Update the status of the card that was dropped\n    const updatedClients = this.state.clients.map(client => {\n      if (client.id === cardId) {\n        client.status = newStatus;\n      }\n      return client;\n    });\n    this.setState({\n      clients: updatedClients\n    });\n  }\n  render() {\n    const cards = this.state.clients.map(client => {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: client.id,\n        id: client.id,\n        name: client.name,\n        description: client.description,\n        status: client.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Swimlane-column\",\n      \"data-swimlane\": this.props.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Swimlane-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Swimlane-dragColumn\",\n      ref: this.props.dragulaRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, cards));\n  }\n}","map":{"version":3,"names":["React","Card","Dragula","Swimlane","Component","constructor","props","state","clients","componentDidMount","container","dragulaRef","current","drake","on","el","target","source","sibling","cardId","dataset","id","newSwimlane","swimlane","updateCardStatus","newStatus","updatedClients","map","client","status","setState","render","cards","createElement","key","name","description","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","ref"],"sources":["C:/Users/91848/Desktop/cloudsecdoc/interviewPrep/Simulations/YCombinator/Shiptivity/src/Swimlane.js"],"sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\nimport './Swimlane.css';\r\nimport Dragula from 'dragula';\r\n\r\nexport default class Swimlane extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clients: this.props.clients,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Initialize drag-and-drop functionality using Dragula\r\n    const container = this.props.dragulaRef.current;\r\n    \r\n    // Configure dragula to handle card dragging\r\n    const drake = Dragula([container]);\r\n\r\n    // Handle when a card is dropped in another swimlane\r\n    drake.on('drop', (el, target, source, sibling) => {\r\n      const cardId = el.dataset.id;\r\n      const newSwimlane = target.dataset.swimlane; // Assuming each swimlane has a dataset with its name\r\n      this.updateCardStatus(cardId, newSwimlane);\r\n    });\r\n  }\r\n\r\n  updateCardStatus(cardId, newStatus) {\r\n    // Update the status of the card that was dropped\r\n    const updatedClients = this.state.clients.map(client => {\r\n      if (client.id === cardId) {\r\n        client.status = newStatus;\r\n      }\r\n      return client;\r\n    });\r\n\r\n    this.setState({ clients: updatedClients });\r\n  }\r\n\r\n  render() {\r\n    const cards = this.state.clients.map(client => {\r\n      return (\r\n        <Card\r\n          key={client.id}\r\n          id={client.id}\r\n          name={client.name}\r\n          description={client.description}\r\n          status={client.status}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"Swimlane-column\" data-swimlane={this.props.name}>\r\n        <div className=\"Swimlane-title\">{this.props.name}</div>\r\n        <div className=\"Swimlane-dragColumn\" ref={this.props.dragulaRef}>\r\n          {cards}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB;AACvB,OAAOC,OAAO,MAAM,SAAS;AAE7B,eAAe,MAAMC,QAAQ,SAASH,KAAK,CAACI,SAAS,CAAC;EACpDC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,OAAO,EAAE,IAAI,CAACF,KAAK,CAACE;IACtB,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClB;IACA,MAAMC,SAAS,GAAG,IAAI,CAACJ,KAAK,CAACK,UAAU,CAACC,OAAO;;IAE/C;IACA,MAAMC,KAAK,GAAGX,OAAO,CAAC,CAACQ,SAAS,CAAC,CAAC;;IAElC;IACAG,KAAK,CAACC,EAAE,CAAC,MAAM,EAAE,CAACC,EAAE,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,KAAK;MAChD,MAAMC,MAAM,GAAGJ,EAAE,CAACK,OAAO,CAACC,EAAE;MAC5B,MAAMC,WAAW,GAAGN,MAAM,CAACI,OAAO,CAACG,QAAQ,CAAC,CAAC;MAC7C,IAAI,CAACC,gBAAgB,CAACL,MAAM,EAAEG,WAAW,CAAC;IAC5C,CAAC,CAAC;EACJ;EAEAE,gBAAgBA,CAACL,MAAM,EAAEM,SAAS,EAAE;IAClC;IACA,MAAMC,cAAc,GAAG,IAAI,CAACnB,KAAK,CAACC,OAAO,CAACmB,GAAG,CAACC,MAAM,IAAI;MACtD,IAAIA,MAAM,CAACP,EAAE,KAAKF,MAAM,EAAE;QACxBS,MAAM,CAACC,MAAM,GAAGJ,SAAS;MAC3B;MACA,OAAOG,MAAM;IACf,CAAC,CAAC;IAEF,IAAI,CAACE,QAAQ,CAAC;MAAEtB,OAAO,EAAEkB;IAAe,CAAC,CAAC;EAC5C;EAEAK,MAAMA,CAAA,EAAG;IACP,MAAMC,KAAK,GAAG,IAAI,CAACzB,KAAK,CAACC,OAAO,CAACmB,GAAG,CAACC,MAAM,IAAI;MAC7C,oBACE5B,KAAA,CAAAiC,aAAA,CAAChC,IAAI;QACHiC,GAAG,EAAEN,MAAM,CAACP,EAAG;QACfA,EAAE,EAAEO,MAAM,CAACP,EAAG;QACdc,IAAI,EAAEP,MAAM,CAACO,IAAK;QAClBC,WAAW,EAAER,MAAM,CAACQ,WAAY;QAChCP,MAAM,EAAED,MAAM,CAACC,MAAO;QAAAQ,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CACvB,CAAC;IAEN,CAAC,CAAC;IAEF,oBACE1C,KAAA,CAAAiC,aAAA;MAAKU,SAAS,EAAC,iBAAiB;MAAC,iBAAe,IAAI,CAACrC,KAAK,CAAC6B,IAAK;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC9D1C,KAAA,CAAAiC,aAAA;MAAKU,SAAS,EAAC,gBAAgB;MAAAN,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAE,IAAI,CAACpC,KAAK,CAAC6B,IAAU,CAAC,eACvDnC,KAAA,CAAAiC,aAAA;MAAKU,SAAS,EAAC,qBAAqB;MAACC,GAAG,EAAE,IAAI,CAACtC,KAAK,CAACK,UAAW;MAAA0B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC7DV,KACE,CACF,CAAC;EAEV;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}