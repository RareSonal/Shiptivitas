{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91848\\\\Desktop\\\\cloudsecdoc\\\\interviewPrep\\\\Simulations\\\\YCombinator-React-advanced\\\\Shiptivitas\\\\frontend\\\\src\\\\Card.js\";\nimport React from 'react';\nimport './Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Card extends React.Component {\n  render() {\n    // Destructure the props\n    const {\n      id,\n      name,\n      status,\n      style\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Card\",\n      \"data-id\": id,\n      \"data-status\": status,\n      style: style // This will dynamically update the background color based on status\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Card-title\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n/*\r\nimport React from 'react';\r\nimport './Card.css';\r\n\r\nexport default class Card extends React.Component {\r\n  render() {\r\n    // Mapping statuses to corresponding classes\r\n    const statusClassMap = {\r\n      backlog: 'Card-grey',\r\n      'in-progress': 'Card-blue',\r\n      complete: 'Card-green',\r\n    };\r\n\r\n    // Get the appropriate class for the card based on status\r\n    const className = ['Card', statusClassMap[this.props.status] || '']; // Default to empty string if no status matches\r\n\r\n    return (\r\n      <div className={className.join(' ')} data-id={this.props.id} data-status={this.props.status}>\r\n        <div className=\"Card-title\">{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n*/","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Card","Component","render","id","name","status","style","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/91848/Desktop/cloudsecdoc/interviewPrep/Simulations/YCombinator-React-advanced/Shiptivitas/frontend/src/Card.js"],"sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nexport default class Card extends React.Component {\r\n  render() {\r\n    // Destructure the props\r\n    const { id, name, status, style } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"Card\"\r\n        data-id={id}\r\n        data-status={status}\r\n        style={style} // This will dynamically update the background color based on status\r\n      >\r\n        <div className=\"Card-title\">{name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nimport React from 'react';\r\nimport './Card.css';\r\n\r\nexport default class Card extends React.Component {\r\n  render() {\r\n    // Mapping statuses to corresponding classes\r\n    const statusClassMap = {\r\n      backlog: 'Card-grey',\r\n      'in-progress': 'Card-blue',\r\n      complete: 'Card-green',\r\n    };\r\n\r\n    // Get the appropriate class for the card based on status\r\n    const className = ['Card', statusClassMap[this.props.status] || '']; // Default to empty string if no status matches\r\n\r\n    return (\r\n      <div className={className.join(' ')} data-id={this.props.id} data-status={this.props.status}>\r\n        <div className=\"Card-title\">{this.props.name}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n*/"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,MAAMC,IAAI,SAASH,KAAK,CAACI,SAAS,CAAC;EAChDC,MAAMA,CAAA,EAAG;IACP;IACA,MAAM;MAAEC,EAAE;MAAEC,IAAI;MAAEC,MAAM;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IAE9C,oBACER,OAAA;MACES,SAAS,EAAC,MAAM;MAChB,WAASL,EAAG;MACZ,eAAaE,MAAO;MACpBC,KAAK,EAAEA,KAAM,CAAC;MAAA;MAAAG,QAAA,eAEdV,OAAA;QAAKS,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAEL;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAEV;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}