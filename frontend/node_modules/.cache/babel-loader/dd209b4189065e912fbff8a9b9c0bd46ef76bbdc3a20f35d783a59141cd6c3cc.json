{"ast":null,"code":"import React from'react';import'dragula/dist/dragula.css';import Swimlane from'./Swimlane';import'./Board.css';import dragula from'dragula';export default class Board extends React.Component{constructor(props){super(props);const clients=this.getClients();this.state={clients:{backlog:clients.filter(client=>client.status==='backlog'),inProgress:clients.filter(client=>client.status==='in-progress'),complete:clients.filter(client=>client.status==='complete')}};this.swimlanes={backlog:/*#__PURE__*/React.createRef(),inProgress:/*#__PURE__*/React.createRef(),complete:/*#__PURE__*/React.createRef()};}getClients(){return[['1','Stark, White and Abbott','Cloned Optimal Architecture','in-progress'],['2','Wiza LLC','Exclusive Bandwidth-Monitored Implementation','complete'],['3','Nolan LLC','Vision-Oriented 4Thgeneration Graphicaluserinterface','backlog'],['4','Thompson PLC','Streamlined Regional Knowledgeuser','in-progress'],['5','Walker-Williamson','Team-Oriented 6Thgeneration Matrix','in-progress'],['6','Boehm and Sons','Automated Systematic Paradigm','backlog'],['7','Runolfsson, Hegmann and Block','Integrated Transitional Strategy','backlog'],['8','Schumm-Labadie','Operative Heuristic Challenge','backlog'],['9','Kohler Group','Re-Contextualized Multi-Tasking Attitude','backlog'],['10','Romaguera Inc','Managed Foreground Toolset','backlog'],['11','Reilly-King','Future-Proofed Interactive Toolset','complete'],['12','Emard, Champlin and Runolfsdottir','Devolved Needs-Based Capability','backlog'],['13','Fritsch, Cronin and Wolff','Open-Source 3Rdgeneration Website','complete'],['14','Borer LLC','Profit-Focused Incremental Orchestration','backlog'],['15','Emmerich-Ankunding','User-Centric Stable Extranet','in-progress'],['16','Willms-Abbott','Progressive Bandwidth-Monitored Access','in-progress'],['17','Brekke PLC','Intuitive User-Facing Customerloyalty','complete'],['18','Bins, Toy and Klocko','Integrated Assymetric Software','backlog'],['19','Hodkiewicz-Hayes','Programmable Systematic Securedline','backlog'],['20','Murphy, Lang and Ferry','Organized Explicit Access','backlog']].map(companyDetails=>({id:companyDetails[0],name:companyDetails[1],description:companyDetails[2],status:companyDetails[3]}));}updateCardStatus(cardId,newStatus){const clients={...this.state.clients};// Ensure the target status exists\nif(!clients[newStatus]){console.error(`Invalid status: ${newStatus}`);return;}// Find and remove the card from its old status\nlet cardToMove=null;Object.keys(clients).forEach(status=>{const cardIndex=clients[status].findIndex(client=>client.id===cardId);if(cardIndex!==-1){// Remove card from the old swimlane\n[cardToMove]=clients[status].splice(cardIndex,1);cardToMove.status=newStatus;// Update card's status\n}});// Add the card to the new swimlane\nif(cardToMove){clients[newStatus].push(cardToMove);this.setState({clients});}}componentDidMount(){dragula([this.swimlanes.backlog.current,this.swimlanes.inProgress.current,this.swimlanes.complete.current]).on('drop',(el,target)=>{const newStatus=target.getAttribute('data-status');const cardId=el.getAttribute('data-id');this.updateCardStatus(cardId,newStatus);// Update the card's status\n});}renderSwimlane(name,clients,ref){return/*#__PURE__*/React.createElement(Swimlane,{name:name,clients:clients,dragulaRef:ref});}render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"Board\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"},this.renderSwimlane('Backlog',this.state.clients.backlog,this.swimlanes.backlog)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"},this.renderSwimlane('In Progress',this.state.clients.inProgress,this.swimlanes.inProgress)),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"},this.renderSwimlane('Complete',this.state.clients.complete,this.swimlanes.complete)))));}}/*import React from 'react';\r\nimport 'dragula/dist/dragula.css';\r\nimport Swimlane from './Swimlane';\r\nimport './Board.css';\r\nimport dragula from 'dragula';\r\n\r\nexport default class Board extends React.Component {\r\nconstructor(props) {\r\nsuper(props);\r\nconst clients = this.getClients();\r\nthis.state = {\r\nclients: {\r\nbacklog: clients.filter(client => client.status === 'backlog'),\r\ninProgress: clients.filter(client => client.status === 'in-progress'),\r\ncomplete: clients.filter(client => client.status === 'complete'),\r\n}\r\n};\r\nthis.swimlanes = {\r\nbacklog: React.createRef(),\r\ninProgress: React.createRef(),\r\ncomplete: React.createRef(),\r\n};\r\nthis.drake = null; // Initialize dragula instance\r\n}\r\n\r\ngetClients() {\r\nreturn [\r\n['1','Stark, White and Abbott','Cloned Optimal Architecture', 'backlog'],\r\n['2','Wiza LLC','Exclusive Bandwidth-Monitored Implementation', 'complete'],\r\n['3','Nolan LLC','Vision-Oriented 4Thgeneration Graphicaluserinterface', 'backlog'],\r\n['4','Thompson PLC','Streamlined Regional Knowledgeuser', 'in-progress'],\r\n['5','Walker-Williamson','Team-Oriented 6Thgeneration Matrix', 'in-progress'],\r\n['6','Boehm and Sons','Automated Systematic Paradigm', 'backlog'],\r\n['7','Runolfsson, Hegmann and Block','Integrated Transitional Strategy', 'backlog'],\r\n['8','Schumm-Labadie','Operative Heuristic Challenge', 'backlog'],\r\n['9','Kohler Group','Re-Contextualized Multi-Tasking Attitude', 'backlog'],\r\n['10','Romaguera Inc','Managed Foreground Toolset', 'backlog'],\r\n['11','Reilly-King','Future-Proofed Interactive Toolset', 'complete'],\r\n['12','Emard, Champlin and Runolfsdottir','Devolved Needs-Based Capability', 'backlog'],\r\n['13','Fritsch, Cronin and Wolff','Open-Source 3Rdgeneration Website', 'complete'],\r\n['14','Borer LLC','Profit-Focused Incremental Orchestration', 'backlog'],\r\n['15','Emmerich-Ankunding','User-Centric Stable Extranet', 'in-progress'],\r\n['16','Willms-Abbott','Progressive Bandwidth-Monitored Access', 'in-progress'],\r\n['17','Brekke PLC','Intuitive User-Facing Customerloyalty', 'complete'],\r\n['18','Bins, Toy and Klocko','Integrated Assymetric Software', 'backlog'],\r\n['19','Hodkiewicz-Hayes','Programmable Systematic Securedline', 'backlog'],\r\n['20','Murphy, Lang and Ferry','Organized Explicit Access', 'backlog'],\r\n].map(companyDetails => ({\r\nid: companyDetails?.[0],\r\nname: companyDetails?.[1],\r\ndescription: companyDetails?.[2],\r\nstatus: companyDetails?.[3],\r\n})).filter(client => client.id); // Ensure no undefined clients\r\n}\r\n\r\nupdateCardStatus(cardId, newStatus) {\r\nthis.setState(prevState => {\r\nconst updatedClients = { ...prevState.clients };\r\nlet cardToMove = null;\r\nlet previousStatus = null;\r\n\r\n// Find and remove the card from its old status\r\n  Object.keys(updatedClients).forEach(status => {\r\n    const cardIndex = updatedClients?.[status]?.findIndex(client => client.id === cardId);\r\n    if (cardIndex !== -1) {\r\n      // Create a copy of the card before removing\r\n      cardToMove = { ...updatedClients?.[status]?.[cardIndex] };\r\n      updatedClients?.[status]?.splice(cardIndex, 1);\r\n      previousStatus = status;\r\n    }\r\n  });\r\n\r\n  // Update the card's status if found\r\n  if (cardToMove) {\r\n    cardToMove.status = newStatus;\r\n    if (!updatedClients?.[newStatus]) {\r\n      updatedClients?.[newStatus] = [];\r\n    }\r\n    updatedClients?.[newStatus]?.push(cardToMove);\r\n  }\r\n\r\n  return { clients: updatedClients };\r\n});\r\n}\r\n\r\ncomponentDidMount() {\r\nthis.drake = dragula([\r\nthis.swimlanes.backlog.current,\r\nthis.swimlanes.inProgress.current,\r\nthis.swimlanes.complete.current\r\n]);\r\n\r\nthis.drake.on('drop', (el, target) => {\r\n  const newStatus = target.getAttribute('data-status');\r\n  const cardId = el.getAttribute('data-id');\r\n  this.updateCardStatus(cardId, newStatus);\r\n});\r\n}\r\n\r\ncomponentWillUnmount() {\r\nif (this.drake) {\r\nthis.drake.destroy();\r\n}\r\n}\r\n\r\nrenderSwimlane(name, status, clients, ref) {\r\nreturn (\r\n<Swimlane\r\nname={name}\r\nstatus={status}\r\nclients={clients}\r\ndragulaRef={ref}\r\n/>\r\n);\r\n}\r\n\r\nrender() {\r\nreturn (\r\n<div className=\"Board\">\r\n<div className=\"container-fluid\">\r\n<div className=\"row\">\r\n<div className=\"col-md-4\">\r\n{this.renderSwimlane('Backlog', 'backlog', this.state.clients.backlog, this.swimlanes.backlog)}\r\n</div>\r\n<div className=\"col-md-4\">\r\n{this.renderSwimlane('In Progress', 'in-progress', this.state.clients.inProgress, this.swimlanes.inProgress)}\r\n</div>\r\n<div className=\"col-md-4\">\r\n{this.renderSwimlane('Complete', 'complete', this.state.clients.complete, this.swimlanes.complete)}\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n);\r\n}\r\n} */","map":{"version":3,"names":["React","Swimlane","dragula","Board","Component","constructor","props","clients","getClients","state","backlog","filter","client","status","inProgress","complete","swimlanes","createRef","map","companyDetails","id","name","description","updateCardStatus","cardId","newStatus","console","error","cardToMove","Object","keys","forEach","cardIndex","findIndex","splice","push","setState","componentDidMount","current","on","el","target","getAttribute","renderSwimlane","ref","createElement","dragulaRef","render","className"],"sources":["C:/Users/91848/Desktop/cloudsecdoc/interviewPrep/Simulations/YCombinator/Shiptivity/src/Board.js"],"sourcesContent":[" import React from 'react';\r\nimport 'dragula/dist/dragula.css';\r\nimport Swimlane from './Swimlane';\r\nimport './Board.css';\r\nimport dragula from 'dragula';\r\n\r\nexport default class Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const clients = this.getClients();\r\n    this.state = {\r\n      clients: {\r\n        backlog: clients.filter(client => client.status === 'backlog'),\r\n        inProgress: clients.filter(client => client.status === 'in-progress'),\r\n        complete: clients.filter(client => client.status === 'complete'),\r\n      }\r\n    };\r\n    this.swimlanes = {\r\n      backlog: React.createRef(),\r\n      inProgress: React.createRef(),\r\n      complete: React.createRef(),\r\n    };\r\n  }\r\n\r\n  getClients() {\r\n    return [\r\n      ['1','Stark, White and Abbott','Cloned Optimal Architecture', 'in-progress'],\r\n      ['2','Wiza LLC','Exclusive Bandwidth-Monitored Implementation', 'complete'],\r\n      ['3','Nolan LLC','Vision-Oriented 4Thgeneration Graphicaluserinterface', 'backlog'],\r\n      ['4','Thompson PLC','Streamlined Regional Knowledgeuser', 'in-progress'],\r\n      ['5','Walker-Williamson','Team-Oriented 6Thgeneration Matrix', 'in-progress'],\r\n      ['6','Boehm and Sons','Automated Systematic Paradigm', 'backlog'],\r\n      ['7','Runolfsson, Hegmann and Block','Integrated Transitional Strategy', 'backlog'],\r\n      ['8','Schumm-Labadie','Operative Heuristic Challenge', 'backlog'],\r\n      ['9','Kohler Group','Re-Contextualized Multi-Tasking Attitude', 'backlog'],\r\n      ['10','Romaguera Inc','Managed Foreground Toolset', 'backlog'],\r\n      ['11','Reilly-King','Future-Proofed Interactive Toolset', 'complete'],\r\n      ['12','Emard, Champlin and Runolfsdottir','Devolved Needs-Based Capability', 'backlog'],\r\n      ['13','Fritsch, Cronin and Wolff','Open-Source 3Rdgeneration Website', 'complete'],\r\n      ['14','Borer LLC','Profit-Focused Incremental Orchestration', 'backlog'],\r\n      ['15','Emmerich-Ankunding','User-Centric Stable Extranet', 'in-progress'],\r\n      ['16','Willms-Abbott','Progressive Bandwidth-Monitored Access', 'in-progress'],\r\n      ['17','Brekke PLC','Intuitive User-Facing Customerloyalty', 'complete'],\r\n      ['18','Bins, Toy and Klocko','Integrated Assymetric Software', 'backlog'],\r\n      ['19','Hodkiewicz-Hayes','Programmable Systematic Securedline', 'backlog'],\r\n      ['20','Murphy, Lang and Ferry','Organized Explicit Access', 'backlog'],\r\n    ].map(companyDetails => ({\r\n      id: companyDetails[0],\r\n      name: companyDetails[1],\r\n      description: companyDetails[2],\r\n      status: companyDetails[3],\r\n    }));\r\n  }\r\n\r\n  updateCardStatus(cardId, newStatus) {\r\n    const clients = { ...this.state.clients };\r\n\r\n    // Ensure the target status exists\r\n    if (!clients[newStatus]) {\r\n      console.error(`Invalid status: ${newStatus}`);\r\n      return;\r\n    }\r\n\r\n    // Find and remove the card from its old status\r\n    let cardToMove = null;\r\n    Object.keys(clients).forEach(status => {\r\n      const cardIndex = clients[status].findIndex(client => client.id === cardId);\r\n      if (cardIndex !== -1) {\r\n        // Remove card from the old swimlane\r\n        [cardToMove] = clients[status].splice(cardIndex, 1);\r\n        cardToMove.status = newStatus; // Update card's status\r\n      }\r\n    });\r\n\r\n    // Add the card to the new swimlane\r\n    if (cardToMove) {\r\n      clients[newStatus].push(cardToMove);\r\n      this.setState({ clients });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    dragula([this.swimlanes.backlog.current, this.swimlanes.inProgress.current, this.swimlanes.complete.current])\r\n      .on('drop', (el, target) => {\r\n        const newStatus = target.getAttribute('data-status');\r\n        const cardId = el.getAttribute('data-id');\r\n        this.updateCardStatus(cardId, newStatus); // Update the card's status\r\n      });\r\n  }\r\n\r\n  renderSwimlane(name, clients, ref) {\r\n    return (\r\n      <Swimlane\r\n        name={name}\r\n        clients={clients}\r\n        dragulaRef={ref}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Board\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('Backlog', this.state.clients.backlog, this.swimlanes.backlog)}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('In Progress', this.state.clients.inProgress, this.swimlanes.inProgress)}\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              {this.renderSwimlane('Complete', this.state.clients.complete, this.swimlanes.complete)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/*import React from 'react';\r\nimport 'dragula/dist/dragula.css';\r\nimport Swimlane from './Swimlane';\r\nimport './Board.css';\r\nimport dragula from 'dragula';\r\n\r\nexport default class Board extends React.Component {\r\nconstructor(props) {\r\nsuper(props);\r\nconst clients = this.getClients();\r\nthis.state = {\r\nclients: {\r\nbacklog: clients.filter(client => client.status === 'backlog'),\r\ninProgress: clients.filter(client => client.status === 'in-progress'),\r\ncomplete: clients.filter(client => client.status === 'complete'),\r\n}\r\n};\r\nthis.swimlanes = {\r\nbacklog: React.createRef(),\r\ninProgress: React.createRef(),\r\ncomplete: React.createRef(),\r\n};\r\nthis.drake = null; // Initialize dragula instance\r\n}\r\n\r\ngetClients() {\r\nreturn [\r\n['1','Stark, White and Abbott','Cloned Optimal Architecture', 'backlog'],\r\n['2','Wiza LLC','Exclusive Bandwidth-Monitored Implementation', 'complete'],\r\n['3','Nolan LLC','Vision-Oriented 4Thgeneration Graphicaluserinterface', 'backlog'],\r\n['4','Thompson PLC','Streamlined Regional Knowledgeuser', 'in-progress'],\r\n['5','Walker-Williamson','Team-Oriented 6Thgeneration Matrix', 'in-progress'],\r\n['6','Boehm and Sons','Automated Systematic Paradigm', 'backlog'],\r\n['7','Runolfsson, Hegmann and Block','Integrated Transitional Strategy', 'backlog'],\r\n['8','Schumm-Labadie','Operative Heuristic Challenge', 'backlog'],\r\n['9','Kohler Group','Re-Contextualized Multi-Tasking Attitude', 'backlog'],\r\n['10','Romaguera Inc','Managed Foreground Toolset', 'backlog'],\r\n['11','Reilly-King','Future-Proofed Interactive Toolset', 'complete'],\r\n['12','Emard, Champlin and Runolfsdottir','Devolved Needs-Based Capability', 'backlog'],\r\n['13','Fritsch, Cronin and Wolff','Open-Source 3Rdgeneration Website', 'complete'],\r\n['14','Borer LLC','Profit-Focused Incremental Orchestration', 'backlog'],\r\n['15','Emmerich-Ankunding','User-Centric Stable Extranet', 'in-progress'],\r\n['16','Willms-Abbott','Progressive Bandwidth-Monitored Access', 'in-progress'],\r\n['17','Brekke PLC','Intuitive User-Facing Customerloyalty', 'complete'],\r\n['18','Bins, Toy and Klocko','Integrated Assymetric Software', 'backlog'],\r\n['19','Hodkiewicz-Hayes','Programmable Systematic Securedline', 'backlog'],\r\n['20','Murphy, Lang and Ferry','Organized Explicit Access', 'backlog'],\r\n].map(companyDetails => ({\r\nid: companyDetails?.[0],\r\nname: companyDetails?.[1],\r\ndescription: companyDetails?.[2],\r\nstatus: companyDetails?.[3],\r\n})).filter(client => client.id); // Ensure no undefined clients\r\n}\r\n\r\nupdateCardStatus(cardId, newStatus) {\r\nthis.setState(prevState => {\r\nconst updatedClients = { ...prevState.clients };\r\nlet cardToMove = null;\r\nlet previousStatus = null;\r\n\r\n// Find and remove the card from its old status\r\n  Object.keys(updatedClients).forEach(status => {\r\n    const cardIndex = updatedClients?.[status]?.findIndex(client => client.id === cardId);\r\n    if (cardIndex !== -1) {\r\n      // Create a copy of the card before removing\r\n      cardToMove = { ...updatedClients?.[status]?.[cardIndex] };\r\n      updatedClients?.[status]?.splice(cardIndex, 1);\r\n      previousStatus = status;\r\n    }\r\n  });\r\n\r\n  // Update the card's status if found\r\n  if (cardToMove) {\r\n    cardToMove.status = newStatus;\r\n    if (!updatedClients?.[newStatus]) {\r\n      updatedClients?.[newStatus] = [];\r\n    }\r\n    updatedClients?.[newStatus]?.push(cardToMove);\r\n  }\r\n\r\n  return { clients: updatedClients };\r\n});\r\n}\r\n\r\ncomponentDidMount() {\r\nthis.drake = dragula([\r\nthis.swimlanes.backlog.current,\r\nthis.swimlanes.inProgress.current,\r\nthis.swimlanes.complete.current\r\n]);\r\n\r\nthis.drake.on('drop', (el, target) => {\r\n  const newStatus = target.getAttribute('data-status');\r\n  const cardId = el.getAttribute('data-id');\r\n  this.updateCardStatus(cardId, newStatus);\r\n});\r\n}\r\n\r\ncomponentWillUnmount() {\r\nif (this.drake) {\r\nthis.drake.destroy();\r\n}\r\n}\r\n\r\nrenderSwimlane(name, status, clients, ref) {\r\nreturn (\r\n<Swimlane\r\nname={name}\r\nstatus={status}\r\nclients={clients}\r\ndragulaRef={ref}\r\n/>\r\n);\r\n}\r\n\r\nrender() {\r\nreturn (\r\n<div className=\"Board\">\r\n<div className=\"container-fluid\">\r\n<div className=\"row\">\r\n<div className=\"col-md-4\">\r\n{this.renderSwimlane('Backlog', 'backlog', this.state.clients.backlog, this.swimlanes.backlog)}\r\n</div>\r\n<div className=\"col-md-4\">\r\n{this.renderSwimlane('In Progress', 'in-progress', this.state.clients.inProgress, this.swimlanes.inProgress)}\r\n</div>\r\n<div className=\"col-md-4\">\r\n{this.renderSwimlane('Complete', 'complete', this.state.clients.complete, this.swimlanes.complete)}\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n);\r\n}\r\n} */"],"mappings":"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hD,KAAA,CAAA6C,aAAA,QAAKG,SAAS,CAAC,KAAK,eAClBhD,KAAA,CAAA6C,aAAA,QAAKG,SAAS,CAAC,UAAU,EACtB,IAAI,CAACL,cAAc,CAAC,SAAS,CAAE,IAAI,CAAClC,KAAK,CAACF,OAAO,CAACG,OAAO,CAAE,IAAI,CAACM,SAAS,CAACN,OAAO,CAC/E,CAAC,cACNV,KAAA,CAAA6C,aAAA,QAAKG,SAAS,CAAC,UAAU,EACtB,IAAI,CAACL,cAAc,CAAC,aAAa,CAAE,IAAI,CAAClC,KAAK,CAACF,OAAO,CAACO,UAAU,CAAE,IAAI,CAACE,SAAS,CAACF,UAAU,CACzF,CAAC,cACNd,KAAA,CAAA6C,aAAA,QAAKG,SAAS,CAAC,UAAU,EACtB,IAAI,CAACL,cAAc,CAAC,UAAU,CAAE,IAAI,CAAClC,KAAK,CAACF,OAAO,CAACQ,QAAQ,CAAE,IAAI,CAACC,SAAS,CAACD,QAAQ,CAClF,CACF,CACF,CACF,CAAC,CAEV,CACF,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}