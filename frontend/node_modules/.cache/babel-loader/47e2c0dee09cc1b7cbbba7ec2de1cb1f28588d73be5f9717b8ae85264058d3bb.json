{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91848\\\\Desktop\\\\cloudsecdoc\\\\interviewPrep\\\\Simulations\\\\YCombinator\\\\Shiptivity\\\\src\\\\Swimlane.js\";\nimport React from 'react';\nconst Swimlane = _ref => {\n  let {\n    name,\n    clients\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"swimlane\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, name), clients.map(client => /*#__PURE__*/React.createElement(\"div\", {\n    key: client.id,\n    className: `card ${client.status}`,\n    style: {\n      backgroundColor: getStatusColor(client.status)\n    },\n    \"data-id\": client.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, client.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, client.description))));\n};\n_c = Swimlane;\nconst getStatusColor = status => {\n  switch (status) {\n    case 'backlog':\n      return 'grey';\n    case 'in-progress':\n      return 'blue';\n    case 'complete':\n      return 'green';\n    default:\n      return 'white';\n  }\n};\nexport default Swimlane;\nvar _c;\n$RefreshReg$(_c, \"Swimlane\");","map":{"version":3,"names":["React","Swimlane","_ref","name","clients","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","client","key","id","status","style","backgroundColor","getStatusColor","description","_c","$RefreshReg$"],"sources":["C:/Users/91848/Desktop/cloudsecdoc/interviewPrep/Simulations/YCombinator/Shiptivity/src/Swimlane.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Swimlane = ({ name, clients }) => (\r\n  <div className=\"swimlane\">\r\n    <h3>{name}</h3>\r\n    {clients.map(client => (\r\n      <div\r\n        key={client.id}\r\n        className={`card ${client.status}`}\r\n        style={{ backgroundColor: getStatusColor(client.status) }}\r\n        data-id={client.id}\r\n      >\r\n        <h5>{client.name}</h5>\r\n        <p>{client.description}</p>\r\n      </div>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nconst getStatusColor = (status) => {\r\n  switch (status) {\r\n    case 'backlog': return 'grey';\r\n    case 'in-progress': return 'blue';\r\n    case 'complete': return 'green';\r\n    default: return 'white';\r\n  }\r\n};\r\n\r\nexport default Swimlane;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGC,IAAA;EAAA,IAAC;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAAA,oBACjCF,KAAA,CAAAK,aAAA;IAAKC,SAAS,EAAC,UAAU;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvBZ,KAAA,CAAAK,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKT,IAAS,CAAC,EACdC,OAAO,CAACS,GAAG,CAACC,MAAM,iBACjBd,KAAA,CAAAK,aAAA;IACEU,GAAG,EAAED,MAAM,CAACE,EAAG;IACfV,SAAS,EAAE,QAAQQ,MAAM,CAACG,MAAM,EAAG;IACnCC,KAAK,EAAE;MAAEC,eAAe,EAAEC,cAAc,CAACN,MAAM,CAACG,MAAM;IAAE,CAAE;IAC1D,WAASH,MAAM,CAACE,EAAG;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEnBZ,KAAA,CAAAK,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKE,MAAM,CAACX,IAAS,CAAC,eACtBH,KAAA,CAAAK,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIE,MAAM,CAACO,WAAe,CACvB,CACN,CACE,CAAC;AAAA,CACP;AAACC,EAAA,GAfIrB,QAAQ;AAiBd,MAAMmB,cAAc,GAAIH,MAAM,IAAK;EACjC,QAAQA,MAAM;IACZ,KAAK,SAAS;MAAE,OAAO,MAAM;IAC7B,KAAK,aAAa;MAAE,OAAO,MAAM;IACjC,KAAK,UAAU;MAAE,OAAO,OAAO;IAC/B;MAAS,OAAO,OAAO;EACzB;AACF,CAAC;AAED,eAAehB,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}